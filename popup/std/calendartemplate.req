<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 27.11.2017                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 550                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: calendartemplate.req 550 2023-12-25 03:02:54Z            $ #
//#                                                                                 #
//###################################################################################
/** @var Type $m */
namespace popup\std;
use system\Helper\wpDatabase;
use system\std;

// std::test_array($_POST['schedule']);

$database = new wpDatabase();

$calendarID = std::posts('idCalendar');

$startHours = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'starth') != '' ? $_POST['schedule']['starth'] : '';
$startMinutes = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'startm') != '' ? $_POST['schedule']['startm'] : '';

$endHours = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'endh') != '' ? $_POST['schedule']['endh'] : '';
$endMinutes = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'endm') != '' ? $_POST['schedule']['endm'] : '';

$isScene = false;
$sql = "SELECT [id_opcdatapoint]
		FROM [calendar]
		WHERE [id_calendar] = " . $calendarID;
$database->query($sql);
while ($erg = $database->fetch()) {
	if ($erg['id_opcdatapoint'] == '') {
		$isScene = true;
	}
}

if($isScene) {
	$startVal = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'vstart') != '' ? $_POST['schedule']['vstart'] : '';
	$endVal = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'vend') != '' ? $_POST['schedule']['vend'] : '';
} else {
	$database = new wpDatabase();
	$sql = "SELECT [opc].[startuptype], [opc].[unit]
			FROM [calendar] [c]
			INNER JOIN [opcdatapoint] [opc] ON [opc].[id_opcdatapoint] = [c].[id_opcdatapoint]
			WHERE [c].[id_calendar] = " . $calendarID;
	$database->query($sql);

	while ($erg = $database->fetch()) {
		$unit = $erg['unit'];
		$datatype = $erg['startuptype'];
	}
	$startVal = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'vstart') != '' ? $_POST['schedule']['vstart'] : '';
	$endVal = std::arrays($_POST, 'schedule') != '' && std::arrays($_POST['schedule'], 'vend') != '' ? $_POST['schedule']['vend'] : '';
}

?>

<div class="popup">
	<h1><?=std::posts('headline')?></h1>
	<div class="table">
		<div class="tr">
			<div class="td">
				<hr />
			</div>
		</div>
		<div class="tr">
			<div class="td">
				<span>Startwert:</span>
			</div>
			<div class="td">
<?
			if($isScene) {
				echo '<select class="ps-input startvalue">' . getSceneDropDown($startVal) . '</select>';
			}else {
				if($datatype == 'VT_BOOL') {
					echo '<select class="ps-input startvalue">' . getValueDropDown($startVal, $unit) . '</select>';
				} else if(preg_match_all('/(\d+):([^;]+);/', $unit, $m) > 0) {
					echo '<select class="ps-input startvalue">';
					for($i = 0; $i < count($m[0]); $i++) {
						echo '<option value="' . $m[1][$i] . '"' . ($m[1][$i] == $startVal ? ' selected="selected"' : '') . '>' . $m[2][$i] . '</option>';
					}
					echo '<option value="NULL"' . ($startVal == 'NULL' || $startVal== '' ? ' selected="selected"' : '') . '>kein Wert</option>';
					echo '</select>';
				} else {
					echo '	<input type="text" class="ps-input startvalue forosk" value="'. $startVal.'" />';
				}
			}
?>
			</div>
		</div>
		<div class="tr">
			<div class="td">
				<span>Startzeit:</span>
			</div>
			<div class="td">
				<input type="text" class="ps-input starth forosk" value="<?=getTime($startHours)?>" />:<input type="text" class="ps-input startm forosk" value="<?=getTime($startMinutes)?>" />Uhr
			</div>
		</div>
		<div class="tr">
			<div class="td">
				<hr />
			</div>
		</div>
		<div class="tr">
			<div class="td">
				<span>Endwert:</span>
			</div>
			<div class="td">
<?
			if($isScene) {
				echo '<select class="ps-input endvalue">' . getSceneDropDown($endVal) . '</select>';
			}else {
				if($datatype == 'VT_BOOL') {
					echo '<select class="ps-input endvalue">' . getValueDropDown($endVal, $unit) . '</select>';
				} else if(preg_match_all('/(\d+):([^;]+);/', $unit, $m) > 0) {
					echo '<select class="ps-input endvalue">';
					for($i = 0; $i < count($m[0]); $i++) {
						echo '<option value="' . $m[1][$i] . '"' . ($m[1][$i] == $endVal ? ' selected="selected"' : '') . '>' . $m[2][$i] . '</option>';
					}
					echo '<option value="NULL"' . ($endVal == 'NULL' || $endVal == '' ? ' selected="selected"' : '') . '>kein Wert</option>';
					echo '</select>';
				} else {
					echo '<input type="text" class="ps-input endvalue forosk" value="' . $endVal .'" />';
				}
			}
?>
			</div>
		</div>
		<div class="tr">
			<div class="td">
				<span>Endzeit:</span>
			</div>
			<div class="td">
				<input type="text" class="ps-input endh forosk" value="<?=getTime($endHours)?>" />:<input type="text" class="ps-input endm forosk" value="<?=getTime($endMinutes)?>" />Uhr
			</div>
		</div>
	</div>
</div>

<?
function getSceneDropDown($val = '') {
	$html = '';
	$selected = false;
	$database = new wpDatabase();
	$database->query('SELECT [s].[name], [s].[id_scene] FROM [scene] [s]
		INNER JOIN [calendar] [g] ON [s].[id_scenegroup] = [g].[id_scenegroup]
		WHERE [g].[id_calendar] = '.std::posts('idCalendar'));
	while($erg = $database->fetch()) {
		if(($val == $erg['id_scene'])) $selected = true;
		$html .= '<option value="'.$erg['id_scene'].'"'.(($val == $erg['id_scene']) ? ' selected="selected"':'').'>'.$erg['name'].'</option>';
	}
	$html .= '<option value="NULL"'.(!$selected ? ' selected':'').'>Kein Wert</option>';
	return $html;
}
function getValueDropDown($val, $unit) {
	if( preg_match('/^True:(.*);False:(.*);$/', $unit, $m) > 0) {
		$html = '<option value="True"'.(($val == 'True') ? ' selected="selected"':'').'>'. $m[1].'</option>';
		$html .='<option value="False"'.(($val == 'False') ? ' selected="selected"':'').'>'. $m[2].'</option>';
		$html .='<option value="NULL"'.(($val == 'NULL') ? ' selected="selected"':'').'>kein Wert</option>';
	} else {
		$html = '<option value="True"'.(($val == 'True') ? ' selected="selected"':'').'>Betrieb</option>';
		$html .= '<option value="False"'.(($val == 'False') ? ' selected="selected"':'').'>Aus</option>';
		$html .='<option value="NULL"'.(($val == 'NULL' || $val == '') ? ' selected="selected"':'').'>kein Wert</option>';
	}
	return $html;
}
function getTime($value) {
	if(strlen($value) == 1) return '0'.$value;
	else return $value;
}
?>
