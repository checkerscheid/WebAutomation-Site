<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 04.03.2024                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 594                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: d1minibrowse.req 594 2024-04-29 17:52:07Z                $ #
//#                                                                                 #
//###################################################################################
namespace request\std;
use system\WebCom;
use system\std;
use system\Helper\wpDatabase;
use system\Helper\d1mini;
require_once 'system/Helper/d1mini.psys';
class d1minibrowse {
	const c_startFreakaZoneSearch = 'startFreakaZoneSearch';
	public static function startFreakaZoneSearch() {
		header('Content-Type: application/json');
		$WebCom = new WebCom(5);
		echo $WebCom->send('StartD1MiniSearch');
	}
	const c_saveSearchedDevice = 'saveSearchedDevice';
	public static function saveSearchedDevice() {
		$d1m = new d1mini(std::posts('IP'));
		$d1m->insertDevice(std::posts('id_d1minigroup'), std::posts('id_mqttbroker'), std::posts('id_dpgroup'), std::posts('id_trendgroup'));
		/*
		$WebCom = new WebCom();
		echo $WebCom->send('AddD1Mini', "$newID");
		*/
		echo 'S_OK';
	}
	const c_popInfoToSaveD1Mini = 'popInfoToSaveD1Mini';
	public static function popInfoToSaveD1Mini() {
		$wpDatabase = new wpDatabase();
		$html = '<table summary="">';
		//$d1MiniGroup;
		$wpDatabase->query("SELECT " .
				"[id_d1minigroup], [name] " .
				"FROM [d1minigroup] " .
				"ORDER BY [name]");
		$html .= '<tr><td>D1Mini Group:</td><td><select class="ps-input id_d1minigroup">';
		while($erg = $wpDatabase->fetch()) $html .= self::getSelect($erg['id_d1minigroup'], $erg['name']);
		$html .= '</select></td></tr>';
		//$mqttBroker;
		$wpDatabase->query("SELECT " .
			"[id_mqttbroker], CONCAT([ip], ':', [port]) AS [server] " .
			"FROM [WebAutomation].[dbo].[mqttbroker] " .
			"ORDER BY [ip]");
		$html .= '<tr><td>MQTT Broker:</td><td><select class="ps-input id_mqttbroker">';
		while($erg = $wpDatabase->fetch()) $html .= self::getSelect($erg['id_mqttbroker'], $erg['server']);
		$html .= '</select></td></tr>';
		//$dBGroup;
		$wpDatabase->query("SELECT " .
			"[dpgroup].[id_dpgroup], CONCAT([dpnamespace].[name], ' / ', [dpgroup].[name]) AS [dpgroupname] " .
			"FROM [dpgroup] " .
			"INNER JOIN [dpnamespace] ON [dpgroup].[id_dpnamespace] = [dpnamespace].[id_dpnamespace] " .
			"ORDER BY [dpnamespace].[name], [dpgroup].[name]");
		$html .= '<tr><td>DP Group:</td><td><select class="ps-input id_dpgroup">';
		while($erg = $wpDatabase->fetch()) $html .= self::getSelect($erg['id_dpgroup'], $erg['dpgroupname']);
		$html .= '</select></td></tr>';
		//$trendGroup;
		$wpDatabase->query("SELECT " .
			"[id_trendgroup], [name] " .
			"FROM [trendgroup] " .
			"ORDER BY [name]");
		$html .= '<tr><td>Trend Group:</td><td><select class="ps-input id_trendgroup">';
		while($erg = $wpDatabase->fetch()) $html .= self::getSelect($erg['id_trendgroup'], $erg['name']);
		$html .= '</select></td></tr>';

		echo $html . '</table>';
	}
	const c_getsettings = 'getsettings';
	public static function getsettings() {
		header('Content-Type: application/json');
		$WebCom = new WebCom();
		echo $WebCom->send('getD1MiniSettings');
	}
	private static function getSelect($val, $name) {
		return "<option value='$val'>$name</option>";
	}
}

switch(std::gets('param1')) {
	//###################################################################################
	case d1minibrowse::c_startFreakaZoneSearch:
		d1minibrowse::startFreakaZoneSearch();
		break;
	//###################################################################################
	case d1minibrowse::c_saveSearchedDevice:
		d1minibrowse::saveSearchedDevice();
		break;
	//###################################################################################
	case d1minibrowse::c_popInfoToSaveD1Mini:
		d1minibrowse::popInfoToSaveD1Mini();
		break;
	//###################################################################################
	case d1minibrowse::c_getsettings:
		d1minibrowse::getsettings();
		break;
	//###################################################################################
	default:
		\system\html::default();
		break;
}
?>
