<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 13.06.2024                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 696                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: d1mini.req 696 2024-10-06 19:11:29Z                      $ #
//#                                                                                 #
//###################################################################################
namespace request\std;
use Exception;
use system\std, system\WebCom;
use system\Helper\wpDatabase;

//require_once 'system/Helper/d1mini.psys';
require_once 'request/system/wpNeoPixel.psys';
require_once 'request/system/wpCwWw.psys';

class d1mini {
	const c_writetopic = 'writetopic';
	public static function writetopic() {
		$WebCom = new WebCom();
		echo $WebCom->send('publishTopic', std::posts('topic') . '%~%' . std::posts('value'));
	}
	const c_getD1MiniSettings = 'getD1MiniSettings';
	public static function getD1MiniSettings($name) {
		header(wpJSON_HEADER);
		$sql = "SELECT [id_d1mini], [ip] FROM [d1mini] WHERE [name] = '" . $name . "'";
		$wpDatabase = new wpDatabase();
		$wpDatabase->query($sql);
		$erg = $wpDatabase->fetch();
		$WebCom = new WebCom();
		echo $WebCom->send('getD1MiniStatus', $erg['ip']);
	}
	const c_setcmd = 'setcmd';
	public static function setcmd($ip, $cmd) {
		try {
			file_get_contents('http://' . $ip . '/setCmd?cmd=' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
		//echo file_get_contents('http://' . $ip . '/setCmd?cmd=RestartDevice');
	}
	const c_setsimplecmd = 'setsimplecmd';
	private static function setsimplecmd() {
		$erg = file_get_contents('http://' . $ip . '/setCmd?cmd=' . $cmd);
		echo $erg;
	}
	private static function getContext() {
		return stream_context_create([
			"http" => [
				"method"=>"GET",
				"timeout" => 1
			]
		]);
	}
}

switch(std::gets('param1')) {
	//###################################################################################
	case d1mini::c_writetopic:
		d1mini::writetopic();
		break;
		//###################################################################################
	case d1mini::c_getD1MiniSettings:
		echo d1mini::getD1MiniSettings(std::gets('param2'));
		break;
		//###################################################################################
	case d1mini::c_setcmd:
		d1mini::setcmd(std::posts('ip'), std::posts('cmd'));
		break;
		//###################################################################################
	default:
		//\system\html::default();
		break;
}

?>
