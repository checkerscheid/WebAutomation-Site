<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christopher Korn                                                 #
//# Date         : 06.06.2015                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 745                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: router.req 745 2025-06-18 08:33:40Z                      $ #
//#                                                                                 #
//###################################################################################
namespace request\std;
use system\Helper\wpDatabase;
use system\std, system\WebCom;

require_once 'request/system/groups.psys';
require_once 'request/system/dps.psys';

class router {
	const c_menuroutefrom = 'menuroutefrom';
	const c_menurouteto = 'menurouteto';
	const c_menuroutetochoice = 'menuroutetochoice';
	const c_newelemto = 'newelemto';
	const c_savenewroute = 'savenewroute';
	const c_deleterouter = 'deleterouter';
	const c_deletesingle = 'deletesingle';
	const c_deletechecked = 'deletechecked';
}
switch(std::gets('param1')) {
//###################################################################################
// Menueeintraege
//###################################################################################
	case router::c_menuroutefrom:
		if(std::posts('newelems') != '' && count(std::posts('newelems')) > 0) {
			header(wpJSON_HEADER);
			$database = new wpDatabase();
			$values = '';
			foreach(std::posts('newelems') as $newElem) {
				$values .= $newElem . ", ";
			}
			$database->query("INSERT INTO [" . std::posts('table') . "] ([id_dp]) VALUES (" . substr($values, 0, -2) . ")");
			echo '{"erg":"S_OK"}';
		}
	break;
//###################################################################################
	case router::c_menurouteto:
		echo '
		<h1>Routenzuordnung</h1>
		<hr />
		<div id="routen">
			<span>OPC Datenpunkt Quelle:
				<select id="routwahl" class="ps-input">
					<option>Bitte wählen</option>';
		if (std::posts('name') != '' ){
			echo '<option data-point="'.std::posts('datapoint').'">'.std::posts('name').'</option>';
		};
		$database = new wpDatabase();
		$database->query('SELECT DISTINCT [r].[id_dp], ISNULL([dp].[description], [dp].[name]) AS [name]
				FROM [router] [r]
				INNER JOIN [dp] ON [r].[id_dp] = [dp].[id_dp]
				ORDER BY [name]');
		while($erg = $database->fetch()) {
			echo '<option data-point="'.$erg['id_dp'].'">'.$erg['name'].'</option>';
		}
		echo '
				</select>
			</span>
			<span class="ps-delete">'.wpHTML_EMPTY.'</span>
		</div>
		<hr />
		<div class="ps-flex-container">
			<div id="tree1"></div>
			<div id="selectdp"></div>
		</div>';

		break;
//###################################################################################
	case router::c_menuroutetochoice:
		echo '<h2>Datenpunkt Ziele</h2><hr />';
		echo '<ul>';
		if (std::posts('datapoint') != '') {
			echo '
			<li>
				<div class="table">
					<div class="tr">
						<div class="td"><span>Markierung:<span></div>
						<div class="td"><span class="ps-button markallroutes">alle</span></div>
						<div class="td"><span class="ps-button marknone">keine</span></div>
					</div>
					<div class="tr">
						<div class="td"><span>markierte:</span></div>
						<div class="td"><span class="ps-button deletemarked">löschen</span></div>
						<div class="td"></div>
					</div>
				</div>
			</li>
			<li>
				<div class="table">
					<div class="tr">
						<div class="th">Name</div>
						<div class="th"></div>
					</div>
					<hr />' ;
			$database = new wpDatabase();
			$database->query('SELECT [r].[id_router], ISNULL([dp].[description], [dp].[name]) AS [name], [dp].[name] AS [dpname]
					FROM [router] [r]
					INNER JOIN [dp] ON [r].[id_to] = [dp].[id_dp]
					WHERE [r].[id_dp] =' . std::posts('datapoint') . ' ORDER BY [dp].[description]');
			while ($erg = $database->fetch()) {
				echo '
					<div class="tr">
						<div class="td"><span class="dplink td ps-checkbox" data-routid="' . $erg['id_router'] . '">' . $erg['name'] . ' (' . $erg['dpname'] . ')</span></div>
						<div class="td"><span class="ps-button deletesingle">löschen</span></div>
					</div>';
			};
			echo '
				</div>
			</li>';
		}
		echo '</ul>';
		break;
//###################################################################################
	case router::c_newelemto:
		$database = new wpDatabase();
		$database->query("SELECT [id_dpnamespace], [name] FROM [dpnamespace] ORDER BY [name]");
		echo'
			<h1>Ziel festlegen</h1>
			<span>Filter:</span><input type="text" class="ps-input filterNewelem" />
			<span class="markall ps-button">alle markieren</span>
			<span class="markno ps-button">Markierung entfernen</span>
			<span class="savenewroute ps-button">markierte hinzuf&uuml;gen</span>
			<hr />
			<ul>';
		while($erg = $database->fetch()) {
			echo '
				<li class="ps-tree-parent dpnamespacefolder" data-dpnamespace="' . $erg['id_dpnamespace'] . '">' . $erg['name'] . '</li>
				<li data-groups="' . $erg['id_dpnamespace'] . '"></li>';
		}
		echo '
			</ul>';
		break;
//###################################################################################
	case router::c_savenewroute:
		header(wpJSON_HEADER);
		$returns = '{"erg":';
		$database = new wpDatabase();
		if(std::posts('routes') != '' ) {
			foreach(std::posts('routes') as $Route) {
				$database->query('SELECT TOP 1 [id_router] FROM [router] WHERE [id_dp] = ' . std::posts('router') . ' AND [id_to] IS NULL');
				$erg = $database->fetch();
				if($database->hasRows() == 1) {
					if($database->query('UPDATE [router] SET [id_to] = '.$Route.' WHERE [id_router] = '.$erg['id_router'])) {
						$returns .= '"S_OK","Method":"UPDATE","id_router":'.$erg['id_router'].'}';
					} else {
						$returns .= '"S_ERROR"}';
					}
				} else {
					if($database->query('INSERT INTO [router] ([id_dp], [id_to]) VALUES ('.std::posts('router').', '.$Route.')')) {
						$returns .= '"S_OK","Method":"INSERT"}';
					} else {
						$returns .= '"S_ERROR"}';
					}
				}
			}
			$WebCom = new WebCom();
			$WebCom->send('UpdateRouter', std::posts('router'));
			echo $returns;
		}
		break;
//###################################################################################
	case router::c_deleterouter:
		$database = new wpDatabase();
		if (std::posts('router') != '') {
			$database->query('DELETE FROM [router] WHERE [id_to] = '.std::posts('router'));
			$WebCom = new WebCom();
			$WebCom->send('UpdateRouter', std::posts('router'));
			echo 'S_OK';
		}
		break;
//###################################################################################
	case router::c_deletesingle:
		$database = new wpDatabase();
		if (std::posts('single') != '') {
			$database->query('DELETE FROM [router] WHERE [id_router] = '.std::posts('single'));
			$WebCom = new WebCom();
			$WebCom->send('UpdateRouter', std::posts('router'));
			echo 'S_OK';
		}
		break;
//###################################################################################
	case router::c_deletechecked:
		$database = new wpDatabase();
		if(std::posts('group') != '') {
			$query = 'DELETE FROM [router] WHERE [id_router] IN (';
			foreach(std::posts('group') as $value) {
				$query .= $value.', ';
			}
			$query = substr($query, 0, -2).')';
			$database->query($query);
			$WebCom = new WebCom();
			$WebCom->send('UpdateRouter', std::posts('router'));
			echo 'S_OK';
		}
		break;
//###################################################################################
	default:
		//\system\html::default();
		break;
}
?>
