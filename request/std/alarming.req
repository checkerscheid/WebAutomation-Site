<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 29.02.2016                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 672                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: alarming.req 672 2024-07-12 13:20:57Z                    $ #
//#                                                                                 #
//###################################################################################
/** @var Type $system */
namespace request\std;
use system\Helper\wpDatabase;
use system\std, system\WebCom;
class alarming {
	//const c_getalarms = 'getalarms';

	const c_getinnergroups = 'getinnergroups';

	const c_editcontacts = 'editcontacts';
	const c_contactstoalarm = 'contactstoalarm';
	const c_groupstoalarm = 'groupstoalarm';
	const c_filter = 'filter';
}

switch(std::gets('param1')) {
//###################################################################################
	case alarming::c_getinnergroups:
		if(std::posts('idgroup0') != 'NULL'){
			if(std::posts('actualgroup') != 0){
				getInnerGroups(std::posts('actualgroup'), std::posts('idgroup5'), std::posts('idgroup4'), std::posts('idgroup3'), std::posts('idgroup2'), std::posts('idgroup1'), std::posts('idgroup0'));
			} else {
				getAlarms(std::posts('idgroup5'), std::posts('idgroup4'), std::posts('idgroup3'), std::posts('idgroup2'), std::posts('idgroup1'), std::posts('idgroup0'));
			}
		} else {
			getAlarms('NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');
		}

		break;
//###################################################################################
	case alarming::c_editcontacts:
		$database = new wpDatabase();

		$database->query("SELECT [id_email] FROM [alarmtoemail] WHERE [id_alarm] = '".std::posts('id')."'");
		$assignedcontacts = array();
		while($erg = $database->fetch()) {
			array_push($assignedcontacts, $erg['id_email']);
		}
		?>
		<div class="allcontacts" data-idalarm="<?echo std::posts('id');?>">
			<div class="table">
				<div class="tr">
					<div class="th">Alarmierung für:</div>
					<div class="td"><?echo std::posts('name');?></div>
				</div>
				<div class="tr">
					<div class="td">
						<br />
					</div>
				</div>
			</div>
			<div class="table">
		<?
		$database->query("SELECT
			[id_email], [address], CONCAT([lastname], ', ', [name]) AS [name]
			FROM [email]
			ORDER BY [lastname]");
		while($erg = $database->fetch()) {
			echo '<div class="tr"><div class="td">';

			if(in_array($erg['id_email'], $assignedcontacts)){
				echo '<span class="ps-checkbox contact checked" data-idcontact="'.$erg['id_email'].'">'.$erg['name'].'</span>';
			} else {
				echo '<span class="ps-checkbox contact" data-idcontact="'.$erg['id_email'].'">'.$erg['name'].'</span>';
			}
			echo '</div>';

			echo '<div class="td">';
			echo '<span>'.$erg['address'].'</span>';
			echo '</div>';

			echo '</div>';
		}
		?>
			</div>
		</div>
		<?

		break;
//###################################################################################
	case alarming::c_contactstoalarm:

		$database = new wpDatabase();
		$alarmids = array();

		if((std::posts('id_alarm')) != ''){
			array_push($alarmids, std::posts('id_alarm'));
		} else {
			$alarmids = std::posts('alarmids');
		}

		foreach($alarmids as $alarmid){
			$database->query("SELECT [id_email] FROM [alarmtoemail] WHERE [id_alarm] = '".$alarmid."'");
			$contactsindb = array();
			while($erg = $database->fetch()) {
				array_push($contactsindb, $erg['id_email']);
			}

			$newContacts = FALSE;
			if(std::arrays($_POST, 'cinsert') != '') {
				$insert = 'INSERT INTO [alarmtoemail] ([id_alarm], [id_email]) VALUES';
				foreach($_POST['cinsert'] as $ins) {
					if(in_array($ins, $contactsindb)){

					} else {
						$insert .= ' ('.$alarmid.', '.$ins.'),';
						$newContacts = TRUE;
					}
				}
				if($newContacts == TRUE){
					$database->query(substr($insert, 0, -1));
				}
			}

			if(std::arrays($_POST, 'cdelete') != '') {
				$delete = 'DELETE FROM [alarmtoemail] WHERE';
				foreach($_POST['cdelete'] as $ins) {
					$delete .= ' [id_alarm] = '.$alarmid.' AND [id_email] = '.$ins.' OR ';
				}
				$database->query(substr($delete, 0, -4));
			}
		}
		$WebCom = new WebCom();
		$WebCom->send('UpdateMail');

		echo 'S_OK';

		break;
//###################################################################################
	case alarming::c_filter:
		$database = new wpDatabase();

		$sql =	"SELECT DISTINCT
					[dp].[name], [t].[name] AS [type], [a].[id_alarm], [a].[text],
					[g0].[name] AS [groups0], [g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
					[g4].[name] AS [groups4], [g5].[name] AS [groups5],
					[c].[description], [a].[min], [a].[max], [a].[delay] FROM [alarm] [a]
					INNER JOIN [alarmgroup] AS [g0] ON [g0].[id_alarmgroup] = [a].[id_alarmgroup]
					INNER JOIN [dp] ON [dp].[id_dp] = [a].[id_dp]
					INNER JOIN [alarmtype] [t] ON [t].[id_alarmtype] = [a].[id_alarmtype]
					INNER JOIN [alarmcondition] [c] ON [c].[id_alarmcondition] = [a].[id_alarmcondition]
					LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
					LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
					LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
					LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
					LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
					WHERE [dp].[name] LIKE '%".std::posts('filtertext')."%'";

		if($system->useAlarmGroup5()){
			$sql .= " OR [g5].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup4()){
			$sql .= " OR [g4].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup3()){
			$sql .= " OR [g3].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup2()){
			$sql .= " OR [g2].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup1()){
			$sql .= " OR [g1].[name] LIKE '%".std::posts('filtertext')."%'";
		}

		$sql .= " OR [g0].[name] LIKE '%".std::posts('filtertext')."%'";
		$sql .= " OR [c].[description] LIKE '%".std::posts('filtertext')."%'";
		$sql .= " OR [t].[name] LIKE '%".std::posts('filtertext')."%'";
		$sql .= " OR [a].[text] LIKE '%".std::posts('filtertext')."%'";

		$hasAlarms = FALSE;
		$database->query($sql);
		if($database->fetch()){
			$hasAlarms = TRUE;
		}

		if($hasAlarms == TRUE){
			echo '<ul id="alarms" class="alarmsingroup"><li>
				<div class="table">
					<div class="tr">
						<div class="td">Markierung:</div>
						<div class="td">
							<span class="ps-button markall">alle</span>
							<span class="ps-button markno">keine</span>
						</div>
					</div>
					<div class="tr">
						<div class="td"><span>ausgewählte Alarme:</span></div>
						<div class="td">
							<span class="ps-button contactstomarked" title="Teilnehmer zuweisen">Teilnehmer zuweisen</span>
						</div>
					</div>
				</div>';

			echo '
			<hr />
				<div class="table">
					<div class="tr">
						<div class="th"><span class="pfeilunten">&darr;</span></div>
						<div class="th">Beschreibung</div>
						<div class="th">Alarmtyp</div>
						'.($system->useAlarmGroup5() ? '<div class="th">'.$system->nameAlarmGroup5().'</div>' : '').'
						'.($system->useAlarmGroup4() ? '<div class="th">'.$system->nameAlarmGroup4().'</div>' : '').'
						'.($system->useAlarmGroup3() ? '<div class="th">'.$system->nameAlarmGroup3().'</div>' : '').'
						'.($system->useAlarmGroup2() ? '<div class="th">'.$system->nameAlarmGroup2().'</div>' : '').'
						'.($system->useAlarmGroup1() ? '<div class="th">'.$system->nameAlarmGroup1().'</div>' : '').'
						<div class="th">Gruppe</div>
						<div class="th">Alarmierung</div>
					</div>';

			$database->query($sql);

			while($erg = $database->fetch()) {
				echo '<div class="tr" data-name="'.$erg['name'].'" data-id="'.$erg['id_alarm'].'">';
				echo '<div class="td"><span class="ps-checkbox">'.wpHTML_EMPTY.'</span></div>';
				//echo '<div class="td"><span>'.$erg['name'].'</span></div>';
				echo '<div class="td"><span class="tr-alarmtext" title="'.$erg['name'].'">'.$erg['text'].'</div>';
				echo '<div class="td"><span class="tr-alarmtyp">'.$erg['type'].'</span></div>';
				if($system->useAlarmGroup5())
					echo '<div class="td"><span class="tr-groups5">'.$erg['groups5'].'</div>';
				if($system->useAlarmGroup4())
					echo '<div class="td"><span class="tr-groups4">'.$erg['groups4'].'</div>';
				if($system->useAlarmGroup3())
					echo '<div class="td"><span class="tr-groups3">'.$erg['groups3'].'</div>';
				if($system->useAlarmGroup2())
					echo '<div class="td"><span class="tr-groups2">'.$erg['groups2'].'</div>';
				if($system->useAlarmGroup1())
					echo '<div class="td"><span class="tr-groups1">'.$erg['groups1'].'</div>';
				echo '<div class="td"><span class="tr-groups0">'.$erg['groups0'].'</div>';

				echo '
					<div class="td">
						<span class="ps-button contact" title="diesem Alarm Teilnehmer zuweisen">diesem Alarm Teilnehmer zuweisen</span>
					</div></div>';
			}
		} else {
			echo 'Es wurden keine aktiven Alarme für "'.std::posts('filtertext').'" gefunden.';
		}

		echo '</div></li></ul>';

		break;
		break;
//###################################################################################
	default:
		\system\html::default();
		break;
}

function getInnerGroups($actualgroup, $idgroup5, $idgroup4, $idgroup3, $idgroup2, $idgroup1, $idgroup0){
	global $system;

	$usegroup = array();
	$usegroup[5] = $system->useAlarmGroup5();
	$usegroup[4] = $system->useAlarmGroup4();
	$usegroup[3] = $system->useAlarmGroup3();
	$usegroup[2] = $system->useAlarmGroup2();
	$usegroup[1] = $system->useAlarmGroup1();

	$groupnames = array();
	$groupnames[5] = $system->nameAlarmGroup5();
	$groupnames[4] = $system->nameAlarmGroup4();
	$groupnames[3] = $system->nameAlarmGroup3();
	$groupnames[2] = $system->nameAlarmGroup2();
	$groupnames[1] = $system->nameAlarmGroup1();

	$idgroup = array();
	$idgroup[5] = $idgroup5;
	$idgroup[4] = $idgroup4;
	$idgroup[3] = $idgroup3;
	$idgroup[2] = $idgroup2;
	$idgroup[1] = $idgroup1;
	$idgroup[0] = $idgroup0;

	$database = new wpDatabase();

	while($actualgroup != 1 && !$usegroup[$actualgroup-1]){
		$actualgroup--;
	}

	//TODO: Im Moment darf keine Gruppe zwischendrin fehlen

	if($actualgroup != 1){
		$sql = 'SELECT DISTINCT
			[a].[id_alarmgroups'.($actualgroup-1).'] AS [id], [ag].[name]
			FROM [alarm] [a]
			INNER JOIN [alarmgroups'.($actualgroup-1).'] [ag] ON [ag].[id_alarmgroups'.($actualgroup-1).'] = [a].[id_alarmgroups'.($actualgroup-1).']';
		$sql2 = 'SELECT [id_alarm] FROM [alarm]';
	} else {
		$sql = 'SELECT DISTINCT
			[a].[id_alarmgroup] AS [id], [ag].[name] FROM [alarm] [a]
			INNER JOIN [alarmgroup] [ag] ON [ag].[id_alarmgroup] = [a].[id_alarmgroup]';
	}

	$sqlWhere = ' WHERE';

	$hasWhere = FALSE;
	for($i = 5; $i>$actualgroup-1; $i--){
		if($usegroup[$i]){
			if($hasWhere){
				$sqlWhere .= ' AND';
			}
			if($idgroup[$i] != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups'.$i.'] = '.$idgroup[$i];
			} else {
				$sqlWhere .= ' [id_alarmgroups'.$i.'] IS NULL';
			}
			$hasWhere = TRUE;
		}
	}

	if($hasWhere){
		$sql .= $sqlWhere .' ORDER BY [name]';
	} else {
		$sql .= ' ORDER BY [name]';
	}

	$database->query($sql);
	while($erg = $database->fetch()) {
		echo '<li class="ps-tree-parent" data-actualgroup="'.($actualgroup-1).'"';

		for($i = 5; $i>$actualgroup-1; $i--){
			echo 'data-idgroup'.$i.'="'.$idgroup[$i].'"';
		}

		echo 'data-idgroup'.($actualgroup-1).'="'.$erg['id'].'"';

		for($i = $actualgroup-1; $i>=0; $i--){
			echo 'data-idgroup'.$i.'="X"';
		}
		echo '>'.$erg['name'].'</li>';

		if($actualgroup != 1){
			echo '<li><ul data-actualgroupalarms="'.($actualgroup-1).'" data-alarms="';
		} else {
			echo '<li><ul class="alarmsingroup"';

			for($i = 5; $i>$actualgroup-1; $i--){
				echo ' data-idgroup'.$i.'="'.$idgroup[$i].'"';
			}

			echo ' data-idgroup'.($actualgroup-1).'="'.$erg['id'].'"';

			echo ' data-actualgroupalarms="'.($actualgroup-1).'" data-alarms="';
		}

		for($i = 5; $i>$actualgroup-1; $i--){
			echo $idgroup[$i];
		}

		echo $erg['id'];

		for($i = $actualgroup-2; $i>=0; $i--){
			echo 'X';
		}

		echo '"></ul></li>';
	}

	if($actualgroup != 1){
		$sql2 .= $sqlWhere . ' AND [id_alarmgroups'.($actualgroup-1).'] IS NULL AND [id_alarmgroup] IS NOT NULL ORDER BY [text]';

		$database->query($sql2);
		if($erg = $database->fetch()) {
			echo '<li class="ps-tree-parent" data-actualgroup="'.($actualgroup-1).'"';

			for($i = 5; $i>$actualgroup-1; $i--){
				echo 'data-idgroup'.$i.'="'.$idgroup[$i].'"';
			}

			echo 'data-idgroup'.($actualgroup-1).'="NULL"';

			for($i = $actualgroup-1; $i>=0; $i--){
				echo 'data-idgroup'.$i.'="X"';
			}

			echo '>'.$groupnames[$actualgroup-1].' nicht angegeben</li>';

			echo '<li><ul data-actualgroupalarms="'.($actualgroup-1).'" data-alarms="';

			for($i = 5; $i>$actualgroup-1; $i--){
				echo $idgroup[$i];
			}

			echo 'NULL';

			for($i = $actualgroup-2; $i>=0; $i--){
				echo 'X';
			}

			echo '"></ul></li>';
		}
	}

}

function getAlarms($idgroup5, $idgroup4, $idgroup3, $idgroup2, $idgroup1, $idgroup0){
	global $system;
	$database = new wpDatabase();

	if($idgroup0 == 'NULL'){
		$emptyCheck = 'SELECT [id_alarm] FROM [alarm] WHERE [id_alarmgroup] IS NULL';
	} else {
		$emptyCheck = 'SELECT [id_alarm] FROM [alarm] WHERE';
		$sqlWhere = '';

		if($system->useAlarmGroup5()){
			if($idgroup5 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups5] = '.$idgroup5;
			} else {
				$sqlWhere .= ' [id_alarmgroups5] IS NULL';
			}
		}

		if($system->useAlarmGroup4()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup4 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups4] = '.$idgroup4;
			} else {
				$sqlWhere .= ' [id_alarmgroups4] IS NULL';
			}
		}

		if($system->useAlarmGroup3()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup3 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups3] = '.$idgroup3;
			} else {
				$sqlWhere .= ' [id_alarmgroups3] IS NULL';
			}
		}

		if($system->useAlarmGroup2()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup2 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups2] = '.$idgroup2;
			} else {
				$sqlWhere .= ' [id_alarmgroups2] IS NULL';
			}
		}

		if($system->useAlarmGroup1()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup1 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups1] = '.$idgroup1;
			} else {
				$sqlWhere .= ' [id_alarmgroups1] IS NULL';
			}
		}

		if($sqlWhere != ''){
			$sqlWhere .= ' AND';
		}

		$sqlWhere .= ' [id_alarmgroup] = '.$idgroup0;

		$emptyCheck .= $sqlWhere;
	}

	$database->query($emptyCheck);

	$hasAlarms = FALSE;
	while($database->fetch()){
		$hasAlarms = TRUE;
	}

	if($hasAlarms == TRUE){
		//<ul class="alarmsingroup" data-group="'.std::posts('group').'">
		if($idgroup0 != 'NULL') {
			echo '
			<li><hr /></li>';
			echo '
			<li>
				<div class="table">
					<div class="tr">
						<div class="td">Markierung:</div>
						<div class="td">
							<span class="ps-button markall">alle</span>
							<span class="ps-button markno">keine</span>
						</div>
					</div>
					<div class="tr">
						<div class="td"><span>ausgewählte Alarme:</span></div>
						<div class="td">
							<span class="ps-button contactstomarked" title="Teilnehmer zuweisen">Teilnehmer zuweisen</span>
						</div>
					</div>
				</div>
			</li>';
		}
		echo '
			<li><hr /></li>
			<li>
				<div class="table">
					<div class="tr">
						<div class="th"><span class="pfeilunten">&darr;</span></div>
						<div class="th">Beschreibung</div>
						<div class="th">Alarmtyp</div>
						'.($system->useAlarmGroup5() ? '<div class="th">'.$system->nameAlarmGroup5().'</div>' : '').'
						'.($system->useAlarmGroup4() ? '<div class="th">'.$system->nameAlarmGroup4().'</div>' : '').'
						'.($system->useAlarmGroup3() ? '<div class="th">'.$system->nameAlarmGroup3().'</div>' : '').'
						'.($system->useAlarmGroup2() ? '<div class="th">'.$system->nameAlarmGroup2().'</div>' : '').'
						'.($system->useAlarmGroup1() ? '<div class="th">'.$system->nameAlarmGroup1().'</div>' : '').'
						<div class="th">Gruppe</div>
						<div class="th">Alarmierung</div>
					</div>';
		//! TODO Alarm delay anzeigen
		if($idgroup0 == 'NULL') {
			$database->query('SELECT [dp].[name], [t].[name] AS [type], [a].[id_alarm], [a].[text],
					[g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
					[g4].[name] AS [groups4], [g5].[name] AS [groups5]
					FROM [alarm] [a]
					INNER JOIN [dp] ON [dp].[id_dp] = [a].[id_dp]
					INNER JOIN [alarmtype] [t] ON [t].[id_alarmtype] = [a].[id_alarmtype]
					LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
					LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
					LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
					LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
					LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
					WHERE [a].[id_alarmgroup] IS NULL ORDER BY [d].[opcname]');
			while($erg = $database->fetch()) {
				echo '<div class="tr" data-name="'.$erg['name'].'" data-id="'.$erg['id_alarm'].'">';
				echo '<div class="td">'.wpHTML_EMPTY.'</div>';
				echo '<div class="td"><span title="'.$erg['name'].'">'.$erg['text'].'</span></div>';
				//echo '<div class="td"><span>'.$erg['name'].'</span></div>';
				echo '<div class="td"><span class="tr-alarmtyp">'.$erg['type'].'</span></div>';
				if($system->useAlarmGroup5())
					echo '<div class="td"><span class="tr-groups5">'.$erg['groups5'].'</div>';
				if($system->useAlarmGroup4())
					echo '<div class="td"><span class="tr-groups4">'.$erg['groups4'].'</div>';
				if($system->useAlarmGroup3())
					echo '<div class="td"><span class="tr-groups3">'.$erg['groups3'].'</div>';
				if($system->useAlarmGroup2())
					echo '<div class="td"><span class="tr-groups2">'.$erg['groups2'].'</div>';
				if($system->useAlarmGroup1())
					echo '<div class="td"><span class="tr-groups1">'.$erg['groups1'].'</div>';
				echo '<div class="td"><span class="tr-groups0">Alarm ist inaktiv</div>';
				echo '<div class="td"><span class="tr-delay">Nicht möglich, da Alarm inaktiv</div>';
				echo '</div>';
			}
		} else {
			$sql =	'SELECT DISTINCT
					[dp].[name], [t].[name] AS [type], [a].[id_alarm], [a].[text],
					[g0].[name] AS [groups0], [g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
					[g4].[name] AS [groups4], [g5].[name] AS [groups5]
					FROM [alarm] [a]
					INNER JOIN [alarmgroup] AS [g0] ON [g0].[id_alarmgroup] = [a].[id_alarmgroup]
					INNER JOIN [dp] ON [dp].[id_dp] = [a].[id_dp]
					INNER JOIN [alarmtype] [t] ON [t].[id_alarmtype] = [a].[id_alarmtype]
					LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
					LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
					LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
					LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
					LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
					WHERE [a].[id_alarmgroup] = '.$idgroup0;

			$groupids = array();

			$groupids[5] = $idgroup5;
			$groupids[4] = $idgroup4;
			$groupids[3] = $idgroup3;
			$groupids[2] = $idgroup2;
			$groupids[1] = $idgroup1;
			$groupids[0] = $idgroup0;

			$sqlwhere = '';
			for($i = 5; $i >= 1; $i--){
				if($groupids[$i] != 'X'){
					if($groupids[$i] == 'NULL'){
						$sqlwhere .= ' AND [a].[id_alarmgroups'.$i.'] IS NULL';
					} else {
						$sqlwhere .= ' AND [a].[id_alarmgroups'.$i.'] = '.$groupids[$i];
					}
				}
			}

			$sql .= $sqlwhere . ' ORDER BY [a].[text]';

			$database->query($sql);

			while($erg = $database->fetch()) {
				echo '<div class="tr" data-name="'.$erg['name'].'" data-id="'.$erg['id_alarm'].'">';
				echo '<div class="td"><span class="ps-checkbox">'.wpHTML_EMPTY.'</span></div>';
				echo '<div class="td"><span class="tr-alarmtext" title="'.$erg['name'].'">'.$erg['text'].'</div>';
				//echo '<div class="td"><span>'.$erg['name'].'</span></div>';
				echo '<div class="td"><span class="tr-alarmtyp">'.$erg['type'].'</span></div>';
				if($system->useAlarmGroup5())
					echo '<div class="td"><span class="tr-groups5">'.$erg['groups5'].'</div>';
				if($system->useAlarmGroup4())
					echo '<div class="td"><span class="tr-groups4">'.$erg['groups4'].'</div>';
				if($system->useAlarmGroup3())
					echo '<div class="td"><span class="tr-groups3">'.$erg['groups3'].'</div>';
				if($system->useAlarmGroup2())
					echo '<div class="td"><span class="tr-groups2">'.$erg['groups2'].'</div>';
				if($system->useAlarmGroup1())
					echo '<div class="td"><span class="tr-groups1">'.$erg['groups1'].'</div>';
				echo '<div class="td"><span class="tr-groups0">'.$erg['groups0'].'</div>';

				echo '
					<div class="td">
						<span class="ps-button contact" title="diesem Alarm Teilnehmer zuweisen">diesem Alarm Teilnehmer zuweisen</span>
					</div></div>';
			}
		}
	} else {
		echo 'Diese Alarmgruppe ist leer';
	}

	echo '</div></li>';
}
?>