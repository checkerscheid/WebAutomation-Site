<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Matthias Kotulla                                                 #
//# Date         : 29.02.2016                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 582                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: alarming.req 582 2024-04-10 06:45:45Z                    $ #
//#                                                                                 #
//###################################################################################
/** @var Type $system */
namespace request\std;
use system\Helper\wpDatabase;
use system\std, system\WebCom;
class alarming {
	//const c_getalarms = 'getalarms';

	const c_getinnergroups = 'getinnergroups';

	const c_editcontacts = 'editcontacts';
	const c_editgroups = 'editgroups';
	const c_alarminginfo = 'alarminginfo';
	const c_contactstoalarm = 'contactstoalarm';
	const c_groupstoalarm = 'groupstoalarm';
	const c_filter = 'filter';
	const c_alarmingpopup = 'alarmingpopup';
}

switch(std::gets('param1')) {
//###################################################################################
	case alarming::c_getinnergroups:
		if(std::posts('idgroup0') != 'NULL'){
			if(std::posts('actualgroup') != 0){
				getInnerGroups(std::posts('actualgroup'), std::posts('idgroup5'), std::posts('idgroup4'), std::posts('idgroup3'), std::posts('idgroup2'), std::posts('idgroup1'), std::posts('idgroup0'));
			} else {
				getAlarms(std::posts('idgroup5'), std::posts('idgroup4'), std::posts('idgroup3'), std::posts('idgroup2'), std::posts('idgroup1'), std::posts('idgroup0'));
			}
		} else {
			getAlarms('NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');
		}

		break;
//###################################################################################
	case alarming::c_editcontacts:
		$database = new wpDatabase();

		$database->query("SELECT [id_email] FROM [alarmtoemail] WHERE [id_alarm] = '".std::posts('id')."'");
		$assignedcontacts = array();
		while($erg = $database->fetch()) {
			array_push($assignedcontacts, $erg['id_email']);
		}
		?>
		<div class="allcontacts" data-idalarm="<?echo std::posts('id');?>">
			<div class="table">
				<div class="tr">
					<div class="th">Alarmierung für:</div>
					<div class="td"><?echo std::posts('name');?></div>
				</div>
				<div class="tr">
					<div class="td">
						<br />
					</div>
				</div>
			</div>
			<div class="table">
		<?
		$database->query("SELECT [id_email], [address], CONCAT([lastname], ', ', [name]) AS [name] FROM [email] ORDER BY [lastname]");
		while($erg = $database->fetch()) {
			echo '<div class="tr"><div class="td">';

			if(in_array($erg['id_email'], $assignedcontacts)){
				echo '<span class="ps-checkbox contact checked" data-idcontact="'.$erg['id_email'].'">'.$erg['name'].'</span>';
			} else {
				echo '<span class="ps-checkbox contact" data-idcontact="'.$erg['id_email'].'">'.$erg['name'].'</span>';
			}
			echo '</div>';

			echo '<div class="td">';
			echo '<span>'.$erg['address'].'</span>';
			echo '</div>';

			echo '</div>';
		}
		?>
			</div>
		</div>
		<?

		break;
//###################################################################################
	case alarming::c_editgroups:

		$database = new wpDatabase();
		$assignedgroups = array();

		if((std::posts('id')) != ''){
			$database->query('SELECT [id_escalationgroup] FROM [alarmtoescalation] WHERE [id_alarm] = '.std::posts('id'));

			while($erg = $database->fetch()) {
				array_push($assignedgroups, $erg['id_escalationgroup']);
			}
		}
		?>
		<div class="allgroups" data-idalarm="<?echo std::posts('id');?>" data-alarmgroupid="<?echo std::posts('alarmgroupid');?>">
			<div class="table">
				<div class="tr">
					<div class="th">Alarmierung für:</div>
					<div class="td"><?echo std::posts('name');?></div>
				</div>
				<div class="tr">
					<div class="td">
						<br />
					</div>
				</div>
			</div>
			<div class="table">
		<?
		$database->query("SELECT [id_escalationgroup], [name] FROM [escalationgroup] ORDER BY [name]");
		while($erg = $database->fetch()) {
			echo '<div class="tr"><div class="td">';

			if(in_array($erg['id_escalationgroup'], $assignedgroups)){
				echo '<span class="ps-checkbox group checked" data-idgroup="'.$erg['id_escalationgroup'].'">'.$erg['name'].'</span>';
			} else {
				echo '<span class="ps-checkbox group" data-idgroup="'.$erg['id_escalationgroup'].'">'.$erg['name'].'</span>';
			}

			echo '</div></div>';
		}
		?>
			</div>
		</div>
		<?
		break;
//###################################################################################
	case alarming::c_alarminginfo:
		$database = new wpDatabase();

		if(!$system->useAlarmingmodule()){
			$database->query("SELECT CONCAT([e].[lastname], ', ', [e].[name]) AS [name]
								FROM [alarmtoemail] [ae]
								INNER JOIN [email] [e] ON [e].[id_email] = [ae].[id_email]
								WHERE [ae].[id_alarm] = '".std::posts('id')."'
								ORDER BY [e].[lastname]");

			$assignedcontacts = array();
			while($erg = $database->fetch()) {
				array_push($assignedcontacts, $erg['name']);
			}
			$assignedcontacts = array_unique($assignedcontacts);
		} else {
			$database->query('SELECT [eg].[name], [eg].[id_escalationgroup]
					FROM [alarmtoescalation] [ae]
					INNER JOIN [escalationgroup] [eg] ON [eg].[id_escalationgroup] = [ae].[id_escalationgroup]
					WHERE [ae].[id_alarm] = '.std::posts('id').'
					ORDER BY [eg].[name]');

			$inplans = array();
			$assignedgroups = array();
			while($erg = $database->fetch()) {
				$assignedgroups[$erg['id_escalationgroup']] = $erg['name'];
				$inplans[$erg['name']] = '';
			}
			$assignedgroups = array_unique($assignedgroups);

			foreach ($assignedgroups as $id => $group){

				$database->query('SELECT [sp].[name]
					FROM [standbyescalation] [se]
					INNER JOIN [standbyplans] [sp] ON [sp].[id_standbyplan] = [se].[id_standbyplan]
					WHERE [se].[id_escalationgroup] = '.$id.'
					ORDER BY [sp].[name]');

				$plans = array();
				while($erg = $database->fetch()) {
					array_push($plans, $erg['name']);
				}
				$plans = array_unique($plans);

				foreach ($plans as $plan){
					$inplans[$group] .= $plan.', ';
				}
			}
		}

		echo '
				<div class="table emptable">
					<div class="tr">
						<div class="th">Alarmierung für:</div>
						<div class="td">'.std::posts('name').'</div>
					</div>
					<div class="tr">
						<div>
							<br />
						</div>
					</div>
				</div>
				<div class="table emptable">
					<div class="tr">';

		if($system->useAlarmingmodule()){
			echo '<div class="th">Eskalationsgruppen</div>';
			echo '<div class="th">In Bereitschaftsplan</div>';
		} else {
			echo '<div class="th">Teilnehmer</div>';
		}

		echo '
					</div>';

		if($system->useAlarmingmodule()){
			if(!empty($assignedgroups)){
				foreach ($assignedgroups as $group){
					echo '
						<div class="tr">';

					echo '
							<div class="td">'.$group.'</div>';

					if(substr($inplans[$group], 0, -2) != ''){
						echo '
							<div class="td">'.substr($inplans[$group], 0, -2).'</div>';
					} else {
						echo '
							<div class="td">-</div>';
					}
					echo '
						</div>';
				}
			} else {
				echo '<div class="tr"><div class="td">-</div><div class="td">-</div></div>';
			}
		} else {
			if(!empty($assignedcontacts)){
				foreach ($assignedcontacts as $contact){
					echo '
						<div class="tr">
							<div class="td">'.$contact.'</div>
						</div>';
				}
			} else {
				echo '<div class="tr"><div class="td">-</div></div>';
			}
		}

		echo '
				</div>';
		break;
//###################################################################################
	case alarming::c_contactstoalarm:

		$database = new wpDatabase();
		$alarmids = array();

		if((std::posts('id_alarm')) != ''){
			array_push($alarmids, std::posts('id_alarm'));
		} else {
			$alarmids = std::posts('alarmids');
		}

		foreach($alarmids as $alarmid){
			$database->query("SELECT [id_email] FROM [alarmtoemail] WHERE [id_alarm] = '".$alarmid."'");
			$contactsindb = array();
			while($erg = $database->fetch()) {
				array_push($contactsindb, $erg['id_email']);
			}

			$newContacts = FALSE;
			if(std::arrays($_POST, 'cinsert') != '') {
				$insert = 'INSERT INTO [alarmtoemail] ([id_alarm], [id_email]) VALUES';
				foreach($_POST['cinsert'] as $ins) {
					if(in_array($ins, $contactsindb)){

					} else {
						$insert .= ' ('.$alarmid.', '.$ins.'),';
						$newContacts = TRUE;
					}
				}
				if($newContacts == TRUE){
					$database->query(substr($insert, 0, -1));
				}
			}

			if(std::arrays($_POST, 'cdelete') != '') {
				$delete = 'DELETE FROM [alarmtoemail] WHERE';
				foreach($_POST['cdelete'] as $ins) {
					$delete .= ' [id_alarm] = '.$alarmid.' AND [id_email] = '.$ins.' OR ';
				}
				$database->query(substr($delete, 0, -4));
			}
		}
		$WebCom = new WebCom();
		$WebCom->send('UpdateMail');

		echo 'S_OK';

		break;
//###################################################################################
	case alarming::c_groupstoalarm:

		$database = new wpDatabase();
		$alarmids = array();

		if((std::posts('id_alarm')) != ''){
			array_push($alarmids, std::posts('id_alarm'));
		} else {
			$alarmids = std::posts('alarmids');
		}

		foreach($alarmids as $alarmid){
			$database->query('SELECT [id_escalationgroup] FROM [alarmtoescalation] WHERE [id_alarm] = '.$alarmid);

			$assignedgroups = array();
			while($erg = $database->fetch()) {
				array_push($assignedgroups, $erg['id_escalationgroup']);
			}

			if(std::arrays($_POST, 'cinsert') != '') {
				$newGroups = FALSE;
				$insert = 'INSERT INTO [alarmtoescalation] ([id_escalationgroup], [id_alarm]) VALUES';

				foreach($_POST['cinsert'] as $ins) {
					if(in_array($ins, $assignedgroups)){

					} else {
						$insert .= ' ('.$ins.', '.$alarmid.'),';
						$newGroups = TRUE;
					}
				}
				if($newGroups == TRUE){
					$database->query(substr($insert, 0, -1));
				}
			}

			if(std::arrays($_POST, 'cdelete') != '') {
				$delete = 'DELETE FROM [alarmtoescalation] WHERE';

				foreach($_POST['cdelete'] as $del){
					$delete .= ' [id_escalationgroup] = '.$del.' AND [id_alarm]= '.$alarmid.' OR ';
				}
				$database->query(substr($delete, 0, -4));
			}
		}
		echo 'S_OK';

		break;
//###################################################################################
	case alarming::c_filter:
		$database = new wpDatabase();

		$sql =	"SELECT DISTINCT
					[d].[opcname], [d].[name], [t].[name] AS [type], [a].[id_alarm], [a].[text],
					[g0].[name] AS [groups0], [g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
					[g4].[name] AS [groups4], [g5].[name] AS [groups5],
					[c].[description], [a].[min], [a].[max], [a].[delay], [ae].[id_alarm] AS [showinfo] FROM [alarm] [a]
					LEFT OUTER JOIN [alarmtoescalation] [ae] ON [ae].[id_alarm] = [a].[id_alarm]
					INNER JOIN [alarmgroup] AS [g0] ON [g0].[id_alarmgroup] = [a].[id_alarmgroup]
					INNER JOIN [opcdatapoint] [d] ON [d].[id_opcdatapoint] = [a].[id_opcdatapoint]
					INNER JOIN [alarmtype] [t] ON [t].[id_alarmtype] = [a].[id_alarmtype]
					INNER JOIN [alarmcondition] [c] ON [c].[id_alarmcondition] = [a].[id_alarmcondition]
					LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
					LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
					LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
					LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
					LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
					WHERE [d].[opcname] LIKE '%".std::posts('filtertext')."%'";

		if($system->useAlarmGroup5()){
			$sql .= " OR [g5].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup4()){
			$sql .= " OR [g4].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup3()){
			$sql .= " OR [g3].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup2()){
			$sql .= " OR [g2].[name] LIKE '%".std::posts('filtertext')."%'";
		}
		if($system->useAlarmGroup1()){
			$sql .= " OR [g1].[name] LIKE '%".std::posts('filtertext')."%'";
		}

		$sql .= " OR [g0].[name] LIKE '%".std::posts('filtertext')."%'";
		$sql .= " OR [c].[description] LIKE '%".std::posts('filtertext')."%'";
		$sql .= " OR [t].[name] LIKE '%".std::posts('filtertext')."%'";
		$sql .= " OR [a].[text] LIKE '%".std::posts('filtertext')."%'";

		$hasAlarms = FALSE;
		$database->query($sql);
		if($database->fetch()){
			$hasAlarms = TRUE;
		}

		if($hasAlarms == TRUE){
			echo '<ul id="alarms" class="alarmsingroup"><li>
				<div class="table">
					<div class="tr">
						<div class="td">Markierung:</div>
						<div class="td">
							<span class="ps-button markall">alle</span>
							<span class="ps-button markno">keine</span>
						</div>
					</div>
					<div class="tr">
						<div class="td"><span>ausgewählte Alarme:</span></div>
						<div class="td">';
				if($system->useAlarmingmodule()){
					echo '<span class="ps-button groupstomarked" title="Eskalationsgruppen zuweisen">Eskalationsgruppen</span>';
				} else {
					echo '<span class="ps-button contactstomarked" title="Teilnehmer zuweisen">Teilnehmer zuweisen</span>';
				}
				echo '
						</div>
					</div>
				</div>';

			echo '
			<hr />
				<div class="table">
					<div class="tr">
						<div class="th"><span class="pfeilunten">&darr;</span></div>
						<div class="th">Beschreibung</div>
						<div class="th">Alarmtyp</div>
						'.($system->useAlarmGroup5() ? '<div class="th">'.$system->nameAlarmGroup5().'</div>' : '').'
						'.($system->useAlarmGroup4() ? '<div class="th">'.$system->nameAlarmGroup4().'</div>' : '').'
						'.($system->useAlarmGroup3() ? '<div class="th">'.$system->nameAlarmGroup3().'</div>' : '').'
						'.($system->useAlarmGroup2() ? '<div class="th">'.$system->nameAlarmGroup2().'</div>' : '').'
						'.($system->useAlarmGroup1() ? '<div class="th">'.$system->nameAlarmGroup1().'</div>' : '').'
						<div class="th">Gruppe</div>
						<div class="th">Alarmierung</div>
					</div>';

			$database->query($sql);

			while($erg = $database->fetch()) {
				echo '<div class="tr" data-name="'.$erg['opcname'].'" data-id="'.$erg['id_alarm'].'">';
				echo '<div class="td"><span class="ps-checkbox">'.wpHTML_EMPTY.'</span></div>';
				//echo '<div class="td"><span>'.$erg['name'].'</span></div>';
				echo '<div class="td"><span class="tr-alarmtext" title="'.$erg['opcname'].'">'.$erg['text'].'</div>';
				echo '<div class="td"><span class="tr-alarmtyp">'.$erg['type'].'</span></div>';
				if($system->useAlarmGroup5())
					echo '<div class="td"><span class="tr-groups5">'.$erg['groups5'].'</div>';
				if($system->useAlarmGroup4())
					echo '<div class="td"><span class="tr-groups4">'.$erg['groups4'].'</div>';
				if($system->useAlarmGroup3())
					echo '<div class="td"><span class="tr-groups3">'.$erg['groups3'].'</div>';
				if($system->useAlarmGroup2())
					echo '<div class="td"><span class="tr-groups2">'.$erg['groups2'].'</div>';
				if($system->useAlarmGroup1())
					echo '<div class="td"><span class="tr-groups1">'.$erg['groups1'].'</div>';
				echo '<div class="td"><span class="tr-groups0">'.$erg['groups0'].'</div>';

				echo '<div class="td">';
				if($system->useAlarmingmodule()){
					echo '<span class="ps-button group" title="Eskalationsgruppen zuweisen">Eskalationsgruppen</span>';
					if(isset($erg['showinfo'])){
						echo '<span class="ps-button info" title="Zugewiesene Alarmierungen anzeigen">Info</span>';
					}
				} else {
					echo '<span class="ps-button contact" title="diesem Alarm Teilnehmer zuweisen">diesem Alarm Teilnehmer zuweisen</span>';
				}

				echo '</div></div>';
			}
		} else {
			echo 'Es wurden keine aktiven Alarme für "'.std::posts('filtertext').'" gefunden.';
		}

		echo '</div></li></ul>';

		break;
//###################################################################################
	case alarming::c_alarmingpopup:
		global $system;

		echo 'var id='.std::posts('id').'; function getID() { return id; };';
		echo 'function getHTML() { var t = "";';
		date_default_timezone_set("Europe/Berlin");
		$timestamp = time();
		$actualday = date("w",$timestamp);

		$id = std::posts('id');

		$database = new wpDatabase();

		$database->query('SELECT [opc].[name], [a].[text], [g0].[name] AS [groups0], [g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
						[g4].[name] AS [groups4], [g5].[name] AS [groups5]
							FROM [alarm] [a]
							INNER JOIN [alarmgroup] AS [g0] ON [g0].[id_alarmgroup] = [a].[id_alarmgroup]
							LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
							LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
							LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
							LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
							LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
							INNER JOIN [opcdatapoint] [opc] ON [opc].[id_opcdatapoint] = [a].[id_opcdatapoint]
							WHERE [a].[id_alarm] = '.$id);

		$info = 't +=\'<div class="table emptable">\' +
							\'<div class="tr">\';';
		if($system->useAlarmGroup5()){
			$info .= 't += \'<div class="th">'.$system->nameAlarmGroup5().'</div>\';';
		}
		if($system->useAlarmGroup4()){
			$info .= 't += \'<div class="th">'.$system->nameAlarmGroup4().'</div>\';';
		}
		if($system->useAlarmGroup3()){
			$info .= 't += \'<div class="th">'.$system->nameAlarmGroup3().'</div>\';';
		}
		if($system->useAlarmGroup2()){
			$info .= 't += \'<div class="th">'.$system->nameAlarmGroup2().'</div>\';';
		}
		if($system->useAlarmGroup1()){
			$info .= 't += \'<div class="th">'.$system->nameAlarmGroup1().'</div>\';';
		}

		$info .= 't += \'<div class="th">Gruppe</div>\';';
		$info .= 't += \'<div class="th">Beschreibung</div>\';';

		$info .= 't +=\'</div>\' +
					\'<div class="tr">\';';

		while($erg = $database->fetch()){
			if($system->useAlarmGroup5()){
				if(isset($erg['groups5'])){
					$info .= 't += \'<div class="td">'.$erg['groups5'].'</div>\';';
				} else {
					$info .= 't += \'<div class="td">nicht angegeben</div>\';';
				}
			}
			if($system->useAlarmGroup4()){
				if(isset($erg['groups4'])){
					$info .= 't += \'<div class="td">'.$erg['groups4'].'</div>\';';
				} else {
					$info .= 't += \'<div class="td">nicht angegeben</div>\';';
				}
			}
			if($system->useAlarmGroup3()){
				if(isset($erg['groups3'])){
					$info .= 't += \'<div class="td">'.$erg['groups3'].'</div>\';';
				} else {
					$info .= 't += \'<div class="td">nicht angegeben</div>\';';
				}
			}
			if($system->useAlarmGroup2()){
				if(isset($erg['groups2'])){
					$info .= 't += \'<div class="td">'.$erg['groups2'].'</div>\';';
				} else {
					$info .= 't += \'<div class="td">nicht angegeben</div>\';';
				}
			}
			if($system->useAlarmGroup1()){
				if(isset($erg['groups1'])){
					$info .= 't += \'<div class="td">'.$erg['groups1'].'</div>\';';
				} else {
					$info .= 't += \'<div class="td">nicht angegeben</div>\';';
				}
			}

			$info .= 't += \'<div class="td">'.$erg['groups0'].'</div>\';';

			$info .= 't += \'<div class="td">'.$erg['text'].'</div>\';';

			$info .= 't +=\'</div>\' +
					\'</div>\' +
					\'<br />\';';

			echo '	t +=\'<div id="alarmingpopup"><div class="alarminfo">\' +
						\'<div class="th">Datenpunkt: '.$erg['name'].'</div><br />\';';

			echo $info;
		}

		$database->query('SELECT DISTINCT [eg].[name], [eg].[id_escalationgroup]
							FROM [alarmtoescalation] [ae]
							INNER JOIN [escalationgroup] [eg] ON [eg].[id_escalationgroup] = [ae].[id_escalationgroup]
							INNER JOIN [escalationgroupmember] [egm] ON [egm].[id_escalationgroup] = [eg].[id_escalationgroup]
							INNER JOIN [email] [e] ON [e].[id_email] = [egm].[id_email]
							WHERE [ae].[id_alarm] = '.$id.' AND [e].[active] = 1
							ORDER BY [eg].[name]');

		$groups = array();
		while($erg = $database->fetch()){
			$groups[$erg['id_escalationgroup']] = $erg['name'];
		}

		$activegroups = array();
		foreach($groups as $id => $name){
			$database->query('SELECT [id_standbyescalation], [day], [time], [stopfor]
							FROM [standbyescalation]
							WHERE [id_escalationgroup] = '.$id
							);

			$times = array();
			while($erg = $database->fetch()){
				$times[$erg['day']][$erg['id_standbyescalation']][$erg['stopfor']] = $erg['time'];
			}

			if(empty($times)){
				$activegroups[$id] = $name;
			} else {
				// Gruppe steckt in einem Plan, es muss geprüft werden ob sie gerade aktiv ist
				if(isset($times[$actualday])){
					// Alle Zeiten der Gruppe heute
					$start = array();
					$end = array();
					foreach($times[$actualday] as $event => $time){
						if(isset($time[''])){
							array_push($start, $time['']);
						} else {
							array_push($end, $time[$event - 1]);
						}
					}

					$count = count($times[$actualday]) / 2;
					for($i = 0; $i<$count; $i++){
						if($start[$i]->getTimestamp() < $timestamp && $timestamp < $end[$i]->getTimestamp()){
							$activegroups[$id] = $name;
						}
					}
				}
			}
		}

		if(empty($activegroups)){
			echo 't += \'<br /><div class="th">Maßnahmen:</div><br /><div class="table emptable"><div class="th">Es wird niemand alarmiert.</div></div><br /></div><br />\';';
		} else {
			echo 't += \'<br /><div class="th">Maßnahmen:</div><br /><div class="table emptable"><div class="th">Folgende Eskalationsgruppen werden per E-Mail benachrichtigt. Zusätzlich müssen die Teilnehmer angerufen werden.</div></div><br /></div><br />\';';
		}

		foreach($activegroups as $id => $name){
			echo '
					t +=\'<br />\' +
						\'<div class="table emptable">\' +
							\'<div class="tr">\' +
								\'<div class="th">Eskalationsgruppe:</div>\' +
								\'<div class="td">'.$name.'</div>\' +
							\'</div>\' +
						\'</div>\' +
						\'<div class="table emptable">\' +
							\'<div class="tr">\' +
								\'<div class="th">Esk.-stufe</div>\' +
								\'<div class="th">Teilnehmer</div>\' +
								\'<div class="th">E-Mail-Adresse</div>\' +
								\'<div class="th">Verz.</div>\' +
								\'<div class="th">Tel. 1</div>\' +
								\'<div class="th">Tel. 2</div>\' +
								\'<div class="th">Anmerkungen</div>\' +
							\'</div>\';';

			$database->query('SELECT [e].[lastname], [e].[name], [e].[address], [egm].[minutes], [e].[phone], [e].[phone2], [e].[etc]
								FROM [escalationgroupmember] [egm]
								INNER JOIN [email] [e] ON [e].[id_email] = [egm].[id_email]
								WHERE [egm].[id_escalationgroup] = '.$id.'
								AND [e].[active] = 1
								ORDER BY [egm].[minutes], [e].[lastname]');

			$escLevel = 0;
			while($erg = $database->fetch()) {
				$escLevel++;
				echo '
						t +=\'<div class="tr">\' +
								\'<div class="td">'.$escLevel.'</div>\' +
								\'<div class="td">'.$erg['lastname'].'\';';
				if($erg['name'] != ''){
					echo '
						t +=\', '.$erg['name'].'\';';
				}
				echo '
						t +=\'</div>\' +
								\'<div class="td">'.$erg['address'].'</div>\' +
								\'<div class="td">'.$erg['minutes'].' Min</div>\' +
								\'<div class="td">'.$erg['phone'].'</div>\' +
								\'<div class="td">'.$erg['phone2'].'</div>\' +
								\'<div class="td">'.$erg['etc'].'</div>\' +
							\'</div>\';';
			}
			echo '
					t +=\'</div>\' +
						\'<br />\';';
		}
		echo '
					t +=\'</div>\';';

		echo 'return t; };';
		break;
//###################################################################################
	default:
		\system\html::default();
		break;
}

function getInnerGroups($actualgroup, $idgroup5, $idgroup4, $idgroup3, $idgroup2, $idgroup1, $idgroup0){
	global $system;

	$usegroup = array();
	$usegroup[5] = $system->useAlarmGroup5();
	$usegroup[4] = $system->useAlarmGroup4();
	$usegroup[3] = $system->useAlarmGroup3();
	$usegroup[2] = $system->useAlarmGroup2();
	$usegroup[1] = $system->useAlarmGroup1();

	$groupnames = array();
	$groupnames[5] = $system->nameAlarmGroup5();
	$groupnames[4] = $system->nameAlarmGroup4();
	$groupnames[3] = $system->nameAlarmGroup3();
	$groupnames[2] = $system->nameAlarmGroup2();
	$groupnames[1] = $system->nameAlarmGroup1();

	$idgroup = array();
	$idgroup[5] = $idgroup5;
	$idgroup[4] = $idgroup4;
	$idgroup[3] = $idgroup3;
	$idgroup[2] = $idgroup2;
	$idgroup[1] = $idgroup1;
	$idgroup[0] = $idgroup0;

	$database = new wpDatabase();

	while($actualgroup != 1 && !$usegroup[$actualgroup-1]){
		$actualgroup--;
	}

	//TODO: Im Moment darf keine Gruppe zwischendrin fehlen

	if($actualgroup != 1){
		$sql = 'SELECT DISTINCT [a].[id_alarmgroups'.($actualgroup-1).'] AS [id], [ag].[name] FROM [alarm] [a] INNER JOIN [alarmgroups'.($actualgroup-1).'] [ag] ON [ag].[id_alarmgroups'.($actualgroup-1).'] = [a].[id_alarmgroups'.($actualgroup-1).']';
		$sql2 = 'SELECT [id_alarm] FROM [alarm]';
	} else {
		$sql = 'SELECT DISTINCT [a].[id_alarmgroup] AS [id], [ag].[name] FROM [alarm] [a] INNER JOIN [alarmgroup] [ag] ON [ag].[id_alarmgroup] = [a].[id_alarmgroup]';
	}

	$sqlWhere = ' WHERE';

	$hasWhere = FALSE;
	for($i = 5; $i>$actualgroup-1; $i--){
		if($usegroup[$i]){
			if($hasWhere){
				$sqlWhere .= ' AND';
			}
			if($idgroup[$i] != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups'.$i.'] = '.$idgroup[$i];
			} else {
				$sqlWhere .= ' [id_alarmgroups'.$i.'] IS NULL';
			}
			$hasWhere = TRUE;
		}
	}

	if($hasWhere){
		$sql .= $sqlWhere .' ORDER BY [name]';
	} else {
		$sql .= ' ORDER BY [name]';
	}

	$database->query($sql);
	while($erg = $database->fetch()) {
		echo '<li class="ps-tree-parent" data-actualgroup="'.($actualgroup-1).'"';

		for($i = 5; $i>$actualgroup-1; $i--){
			echo 'data-idgroup'.$i.'="'.$idgroup[$i].'"';
		}

		echo 'data-idgroup'.($actualgroup-1).'="'.$erg['id'].'"';

		for($i = $actualgroup-1; $i>=0; $i--){
			echo 'data-idgroup'.$i.'="X"';
		}
		echo '>'.$erg['name'].'</li>';

		if($actualgroup != 1){
			echo '<li><ul data-actualgroupalarms="'.($actualgroup-1).'" data-alarms="';
		} else {
			echo '<li><ul class="alarmsingroup"';

			for($i = 5; $i>$actualgroup-1; $i--){
				echo ' data-idgroup'.$i.'="'.$idgroup[$i].'"';
			}

			echo ' data-idgroup'.($actualgroup-1).'="'.$erg['id'].'"';

			echo ' data-actualgroupalarms="'.($actualgroup-1).'" data-alarms="';
		}

		for($i = 5; $i>$actualgroup-1; $i--){
			echo $idgroup[$i];
		}

		echo $erg['id'];

		for($i = $actualgroup-2; $i>=0; $i--){
			echo 'X';
		}

		echo '"></ul></li>';
	}

	if($actualgroup != 1){
		$sql2 .= $sqlWhere . ' AND [id_alarmgroups'.($actualgroup-1).'] IS NULL AND [id_alarmgroup] IS NOT NULL ORDER BY [name]';

		$database->query($sql2);
		if($erg = $database->fetch()) {
			echo '<li class="ps-tree-parent" data-actualgroup="'.($actualgroup-1).'"';

			for($i = 5; $i>$actualgroup-1; $i--){
				echo 'data-idgroup'.$i.'="'.$idgroup[$i].'"';
			}

			echo 'data-idgroup'.($actualgroup-1).'="NULL"';

			for($i = $actualgroup-1; $i>=0; $i--){
				echo 'data-idgroup'.$i.'="X"';
			}

			echo '>'.$groupnames[$actualgroup-1].' nicht angegeben</li>';

			echo '<li><ul data-actualgroupalarms="'.($actualgroup-1).'" data-alarms="';

			for($i = 5; $i>$actualgroup-1; $i--){
				echo $idgroup[$i];
			}

			echo 'NULL';

			for($i = $actualgroup-2; $i>=0; $i--){
				echo 'X';
			}

			echo '"></ul></li>';
		}
	}

}

function getAlarms($idgroup5, $idgroup4, $idgroup3, $idgroup2, $idgroup1, $idgroup0){
	global $system;
	$database = new wpDatabase();

	if($idgroup0 == 'NULL'){
		$emptyCheck = 'SELECT [id_alarm] FROM [alarm] WHERE [id_alarmgroup] IS NULL';
	} else {
		$emptyCheck = 'SELECT [id_alarm] FROM [alarm] WHERE';
		$sqlWhere = '';

		if($system->useAlarmGroup5()){
			if($idgroup5 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups5] = '.$idgroup5;
			} else {
				$sqlWhere .= ' [id_alarmgroups5] IS NULL';
			}
		}

		if($system->useAlarmGroup4()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup4 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups4] = '.$idgroup4;
			} else {
				$sqlWhere .= ' [id_alarmgroups4] IS NULL';
			}
		}

		if($system->useAlarmGroup3()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup3 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups3] = '.$idgroup3;
			} else {
				$sqlWhere .= ' [id_alarmgroups3] IS NULL';
			}
		}

		if($system->useAlarmGroup2()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup2 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups2] = '.$idgroup2;
			} else {
				$sqlWhere .= ' [id_alarmgroups2] IS NULL';
			}
		}

		if($system->useAlarmGroup1()){
			if($sqlWhere != ''){
				$sqlWhere .= ' AND';
			}
			if($idgroup1 != 'NULL'){
				$sqlWhere .= ' [id_alarmgroups1] = '.$idgroup1;
			} else {
				$sqlWhere .= ' [id_alarmgroups1] IS NULL';
			}
		}

		if($sqlWhere != ''){
			$sqlWhere .= ' AND';
		}

		$sqlWhere .= ' [id_alarmgroup] = '.$idgroup0;

		$emptyCheck .= $sqlWhere;
	}

	$database->query($emptyCheck);

	$hasAlarms = FALSE;
	while($database->fetch()){
		$hasAlarms = TRUE;
	}

	if($hasAlarms == TRUE){
		//<ul class="alarmsingroup" data-group="'.std::posts('group').'">
		if($idgroup0 != 'NULL') {
			echo '
			<li><hr /></li>';
			echo '
			<li>
				<div class="table">
					<div class="tr">
						<div class="td">Markierung:</div>
						<div class="td">
							<span class="ps-button markall">alle</span>
							<span class="ps-button markno">keine</span>
						</div>
					</div>
					<div class="tr">
						<div class="td"><span>ausgewählte Alarme:</span></div>
						<div class="td">';
						if($system->useAlarmingmodule()){
							echo '<span class="ps-button groupstomarked" title="Eskalationsgruppen zuweisen">Eskalationsgruppen</span>';
						} else {
							echo '<span class="ps-button contactstomarked" title="Teilnehmer zuweisen">Teilnehmer zuweisen</span>';
						}
						echo '
						</div>
					</div>
				</div>
			</li>';
		}
		echo '
			<li><hr /></li>
			<li>
				<div class="table">
					<div class="tr">
						<div class="th"><span class="pfeilunten">&darr;</span></div>
						<div class="th">Beschreibung</div>
						<div class="th">Alarmtyp</div>
						'.($system->useAlarmGroup5() ? '<div class="th">'.$system->nameAlarmGroup5().'</div>' : '').'
						'.($system->useAlarmGroup4() ? '<div class="th">'.$system->nameAlarmGroup4().'</div>' : '').'
						'.($system->useAlarmGroup3() ? '<div class="th">'.$system->nameAlarmGroup3().'</div>' : '').'
						'.($system->useAlarmGroup2() ? '<div class="th">'.$system->nameAlarmGroup2().'</div>' : '').'
						'.($system->useAlarmGroup1() ? '<div class="th">'.$system->nameAlarmGroup1().'</div>' : '').'
						<div class="th">Gruppe</div>
						<div class="th">Alarmierung</div>
					</div>';
		//! TODO Alarm delay anzeigen
		if($idgroup0 == 'NULL') {
			$database->query('SELECT [d].[opcname], [d].[name], [t].[name] AS [type], [a].[id_alarm], [a].[text],
					[g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
					[g4].[name] AS [groups4], [g5].[name] AS [groups5]
					FROM [alarm] [a]
					INNER JOIN [opcdatapoint] [d] ON [d].[id_opcdatapoint] = [a].[id_opcdatapoint]
					INNER JOIN [alarmtype] [t] ON [t].[id_alarmtype] = [a].[id_alarmtype]
					LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
					LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
					LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
					LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
					LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
					WHERE [a].[id_alarmgroup] IS NULL ORDER BY [d].[opcname]');
			while($erg = $database->fetch()) {
				echo '<div class="tr" data-name="'.$erg['opcname'].'" data-id="'.$erg['id_alarm'].'">';
				echo '<div class="td">'.wpHTML_EMPTY.'</div>';
				echo '<div class="td"><span title="'.$erg['opcname'].'">'.$erg['text'].'</span></div>';
				//echo '<div class="td"><span>'.$erg['name'].'</span></div>';
				echo '<div class="td"><span class="tr-alarmtyp">'.$erg['type'].'</span></div>';
				if($system->useAlarmGroup5())
					echo '<div class="td"><span class="tr-groups5">'.$erg['groups5'].'</div>';
				if($system->useAlarmGroup4())
					echo '<div class="td"><span class="tr-groups4">'.$erg['groups4'].'</div>';
				if($system->useAlarmGroup3())
					echo '<div class="td"><span class="tr-groups3">'.$erg['groups3'].'</div>';
				if($system->useAlarmGroup2())
					echo '<div class="td"><span class="tr-groups2">'.$erg['groups2'].'</div>';
				if($system->useAlarmGroup1())
					echo '<div class="td"><span class="tr-groups1">'.$erg['groups1'].'</div>';
				echo '<div class="td"><span class="tr-groups0">Alarm ist inaktiv</div>';
				echo '<div class="td"><span class="tr-delay">Nicht möglich, da Alarm inaktiv</div>';
				echo '</div>';
			}
		} else {
			$sql =	'SELECT DISTINCT
					[d].[opcname], [d].[name], [t].[name] AS [type], [a].[id_alarm], [a].[text],
					[g0].[name] AS [groups0], [g1].[name] AS [groups1], [g2].[name] AS [groups2], [g3].[name] AS [groups3],
					[g4].[name] AS [groups4], [g5].[name] AS [groups5],
					[ae].[id_alarm] AS [showinfo]
					FROM [alarm] [a]
					LEFT OUTER JOIN [alarmtoescalation] [ae] ON [ae].[id_alarm] = [a].[id_alarm]
					INNER JOIN [alarmgroup] AS [g0] ON [g0].[id_alarmgroup] = [a].[id_alarmgroup]
					INNER JOIN [opcdatapoint] [d] ON [d].[id_opcdatapoint] = [a].[id_opcdatapoint]
					INNER JOIN [alarmtype] [t] ON [t].[id_alarmtype] = [a].[id_alarmtype]
					LEFT OUTER JOIN [alarmgroups1] AS [g1] ON [g1].[id_alarmgroups1] = [a].[id_alarmgroups1]
					LEFT OUTER JOIN [alarmgroups2] AS [g2] ON [g2].[id_alarmgroups2] = [a].[id_alarmgroups2]
					LEFT OUTER JOIN [alarmgroups3] AS [g3] ON [g3].[id_alarmgroups3] = [a].[id_alarmgroups3]
					LEFT OUTER JOIN [alarmgroups4] AS [g4] ON [g4].[id_alarmgroups4] = [a].[id_alarmgroups4]
					LEFT OUTER JOIN [alarmgroups5] AS [g5] ON [g5].[id_alarmgroups5] = [a].[id_alarmgroups5]
					WHERE [a].[id_alarmgroup] = '.$idgroup0;

			$groupids = array();

			$groupids[5] = $idgroup5;
			$groupids[4] = $idgroup4;
			$groupids[3] = $idgroup3;
			$groupids[2] = $idgroup2;
			$groupids[1] = $idgroup1;
			$groupids[0] = $idgroup0;

			$sqlwhere = '';
			for($i = 5; $i >= 1; $i--){
				if($groupids[$i] != 'X'){
					if($groupids[$i] == 'NULL'){
						$sqlwhere .= ' AND [a].[id_alarmgroups'.$i.'] IS NULL';
					} else {
						$sqlwhere .= ' AND [a].[id_alarmgroups'.$i.'] = '.$groupids[$i];
					}
				}
			}

			$sql .= $sqlwhere . ' ORDER BY [a].[text]';

			$database->query($sql);

			while($erg = $database->fetch()) {
				echo '<div class="tr" data-name="'.$erg['opcname'].'" data-id="'.$erg['id_alarm'].'">';
				echo '<div class="td"><span class="ps-checkbox">'.wpHTML_EMPTY.'</span></div>';
				echo '<div class="td"><span class="tr-alarmtext" title="'.$erg['opcname'].'">'.$erg['text'].'</div>';
				//echo '<div class="td"><span>'.$erg['name'].'</span></div>';
				echo '<div class="td"><span class="tr-alarmtyp">'.$erg['type'].'</span></div>';
				if($system->useAlarmGroup5())
					echo '<div class="td"><span class="tr-groups5">'.$erg['groups5'].'</div>';
				if($system->useAlarmGroup4())
					echo '<div class="td"><span class="tr-groups4">'.$erg['groups4'].'</div>';
				if($system->useAlarmGroup3())
					echo '<div class="td"><span class="tr-groups3">'.$erg['groups3'].'</div>';
				if($system->useAlarmGroup2())
					echo '<div class="td"><span class="tr-groups2">'.$erg['groups2'].'</div>';
				if($system->useAlarmGroup1())
					echo '<div class="td"><span class="tr-groups1">'.$erg['groups1'].'</div>';
				echo '<div class="td"><span class="tr-groups0">'.$erg['groups0'].'</div>';

				echo '<div class="td">';
				if($system->useAlarmingmodule()){
					echo '<span class="ps-button group" title="Eskalationsgruppen zuweisen">Eskalationsgruppen</span>';
					if(isset($erg['showinfo'])){
						echo '<span class="ps-button info" title="Zugewiesene Alarmierungen anzeigen">Info</span>';
					}
				} else {
					echo '<span class="ps-button contact" title="diesem Alarm Teilnehmer zuweisen">diesem Alarm Teilnehmer zuweisen</span>';
				}

				echo '</div></div>';
			}
		}
	} else {
		echo 'Diese Alarmgruppe ist leer';
	}

	echo '</div></li>';
}
?>