<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 06.03.2013                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 660                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: visitors.req 660 2024-07-07 22:34:47Z                    $ #
//#                                                                                 #
//###################################################################################
namespace request\std;
use system\Helper\wpDatabase;
use system\Helper\wpConvert;
use system\Helper\wpDateTime;
use system\std, system\wpInit;
require_once 'system/Helper/wpDateTime.psys';
class visitors {
	const c_getactivitytable = 'getactivitytable';
	const c_delete = 'delete';
}

switch(std::gets('param1')) {
	//###################################################################################
	case visitors::c_getactivitytable:
		$where = '';
		if(std::posts('from') != '' && std::posts('to') == '') {
			$where = "WHERE [datetime] > '".std::posts('from')."T00:00:00'";
		}
		if(std::posts('from') == '' && std::posts('to') != '') {
			$where = "WHERE [datetime] < '".std::posts('to')."T23:59:59'";
		}
		if(std::posts('from') != '' && std::posts('to') != '') {
			$where = "WHERE [datetime] > '".std::posts('from')."T00:00:00' AND [datetime] < '".std::posts('to')."T23:59:59'";
		}
		getTable($where);
		break;
	//###################################################################################
	case visitors::c_delete:
		$database = new wpDatabase();
		$timedelete = new wpDatetime();
		$sql = "DELETE FROM [visitors] WHERE [datetime] < '".$timedelete->sub(new \Dateinterval('P'.std::posts('dsgvo').'D'))->format(wpDateTime::forDB)."'";
		echo $sql;
		if($database->query($sql)) echo 'S_OK';
		break;
	//###################################################################################
	default:
		\system\html::default();
		break;
}

function getTable($where) {
	?>
<table id="historictable" class="stripe hover">
	<thead>
		<tr>
			<th>Zeit</th>
			<th>IP</th>
<? if(wpInit::$useDns) { ?>
			<th>Host</th>
<? } ?>
			<th>Benutzername</th>
			<th>Seite</th>
		</tr>
	</thead>
	<tbody>
<?
	$scriptstart = microtime(true);
	$database = new wpDatabase();
	$database->query('
		SELECT [visitors].[ip]
			'.(wpInit::$useDns ? ',[visitors].[host]' : '').'
			,[user].[name]
			,[user].[lastname]
			,[visitors].[page]
			,[visitors].[datetime]
		FROM [visitors]
			LEFT OUTER JOIN [user] ON [visitors].[id_user] = [user].[id_user]
		'.$where.' ORDER BY [visitors].[datetime] DESC
	');
	$count = $database->hasRows();
	while($erg = $database->fetch()) {
		echo '<tr>';
		echo '<td>'.wpConvert::getdeDateTimeFromDB($erg['datetime']).'</td>';
		echo '<td>'.$erg['ip'].'</td>';
		if(wpInit::$useDns) echo '<td>'.$erg['host'].'</td>';
		echo '<td>'.$erg['name'] . ' ' . $erg['lastname'].'</td>';
		echo '<td>'.$erg['page'].'</td>';
		echo '</tr>';
	}
?>
	</tbody>
</table>
<?
	//if(intval($count) >= 1000) echo '<span>Ihre Abfrage erzeugte 1000 Datens&auml;tze. Es sind vielleicht weitere Daten vorhanden. Bitte spezifizieren Sie Ihre Suchanfrage.</span>';
	echo '<!-- Eintraege: '.$count." -->\n";
	echo '<!-- Dauer:'.(microtime(true) - $scriptstart)." -->\n";
}

?>
