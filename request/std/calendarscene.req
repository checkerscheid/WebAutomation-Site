<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 23.07.2014                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 723                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: calendarscene.req 723 2025-02-27 14:24:23Z               $ #
//#                                                                                 #
//###################################################################################
/** @var Type $points */
/** @var Type $m */
namespace request\std;
use system\Helper\wpDatabase;
use system\std, system\WebCom;
class calendarscene {
	const c_getgroup = 'getgroup';
	const c_getpoint = 'getpoint';

	const c_setactive = 'setactive';
	const c_unsetactive = 'unsetactive';
}

switch(std::gets('param1')) {
//###################################################################################
// Treeview Aktionen
//###################################################################################
	case calendarscene::c_getgroup:
		echo '<ul class="group">';
		$database = new wpDatabase();
		$where = (std::posts('group') == '' || std::posts('group') == 'NULL') ? 'IS NULL' : '= '.std::posts('group');
		$database->query('SELECT [id_scene], [name] FROM [scene] WHERE [id_scenegroup] '.$where.' ORDER BY [name]');
		while($erg = $database->fetch()) {
			echo '<li data-scene="'.$erg['id_scene'].'" class="GroupHeadLine">';
			echo '<span class="ps-tree-parent p-tree-parent-scene">'.$erg['name'].'</span>';
			echo '<span class="ps-button" data-writescene="'.$erg['id_scene'].'">aktivieren</span>';
			echo '</li>';
			echo '<li data-points="'.$erg['id_scene'].'" class="p-tree-child p-tree-child-scene">';
			echo '</li>';
		}
		if($database->hasRows() == 0) echo '<li>Keine Szenen definiert</li>';
		echo '</ul>';
		break;
//###################################################################################
	case calendarscene::c_getpoint:
		if(std::posts('id') != '' && std::posts('id') != '0') {
			echo '<table summary=""><tr>';
			echo '<th>Datenpunktname</th>';
			echo '<th>Szenensollwert</th>';
			echo '<th>Istwert</th>';
			echo '</tr>';
			$database = new wpDatabase();
			$database->query('SELECT
					[v].[id_scenevalue], [dpg].[name] AS [group], ISNULL([dp].[description], [dp].[name]) AS [description], [dp].[name], [dp].[unit], [v].[value]
					FROM [dp]
					INNER JOIN [dpgroup] [dpg] ON [dp].[id_dpgroup] = [dpg].[id_dpgroup]
					LEFT JOIN [scenevalue] [v] ON [v].[id_dp] = [dp].[id_dp]
					WHERE [v].[id_scene] = '.std::posts('id'));
			$points = array();
			while($erg = $database->fetch()) {
				if(is_null($erg['unit'])) $erg['unit'] = '';
				echo '<tr data-scenevalue="'.$erg['id_scenevalue'].'">';
				echo '<td><span class="p-desc" title="'.$erg['name'].'">' . $erg['group'] . ' - '.$erg['description'].'</span></td>';
				if(preg_match('/True:(.*);False:(.*);/', $erg['unit'], $m) > 0) {
					echo '<td><span class="ps-input">'.(($erg['value'] == 'True') ? $m[1] : $m[2]).'</span></td>';
				} else if(preg_match('/((\d){1,}:.*;){1,}/', $erg['unit']) > 0 ) {
					$ergTemp = substr($erg['unit'], 0, -1);
					$arr = explode(';', $ergTemp);
					foreach ($arr as $state){
						$arrErg[trim(strstr($state, ':', true))] = str_replace(':', '', strstr($state, ':'));
					}
					if(isset($arrErg[$erg['value']])) {
						echo '<td><span class="ps-input">'.(($arrErg[$erg['value']] == '') ? '-' : $arrErg[$erg['value']]).'</span></td>';
					} else {
						echo '<td><span class="ps-input">'.(($erg['value'] == '') ? '-' : $erg['value']).'</span></td>';
					}
				} else {
					echo '<td><span class="ps-input">'.(($erg['value'] == '') ? '-' : $erg['value']).'</span></td>';
				}
				echo '<td><span class="ps-input" data-value="'.$erg['name'].'">-</span></td>';
				echo '</tr>';
				$points[$erg['name']] = $erg['name'];
			}
			$_SESSION[SESSION_ID]['POINTS'] = array();
			new \system\RegisterSignals($points);
			echo '</table>';
		}
		break;
//###################################################################################
	case calendarscene::c_setactive:
		$database = new wpDatabase();
		$database->query('UPDATE `sceneschedule` SET `active` = 1
				WHERE `id_sceneschedule` = '.std::posts('id'));
		$TCP = new WebCom();
		echo $TCP->send('ForceSceneScheduleRenew', std::posts('id'));
		break;
//###################################################################################
	case calendarscene::c_unsetactive:
		$database = new wpDatabase();
		$database->query('UPDATE `sceneschedule` SET `active` = 0
				WHERE `id_sceneschedule` = '.std::posts('id'));
		$TCP = new WebCom();
		echo $TCP->send('ForceSceneScheduleRenew', std::posts('id'));
		break;
//###################################################################################
	default:
		\system\html::default();
		break;
}
?>
