<?
//###################################################################################
//#                                                                                 #
//#              (C) FreakaZone GmbH                                                #
//#              =======================                                            #
//#                                                                                 #
//###################################################################################
//#                                                                                 #
//# Author       : Christian Scheid                                                 #
//# Date         : 01.08.2024                                                       #
//#                                                                                 #
//# Revision     : $Rev:: 692                                                     $ #
//# Author       : $Author::                                                      $ #
//# File-ID      : $Id:: wpNeoPixel.psys 692 2024-08-07 11:51:08Z                 $ #
//#                                                                                 #
//###################################################################################
namespace request\system;

use system\std;
use system\Helper\wpDatabase;
use system\Helper\security;
use Exception;
use system\Helper\wpNeoPixel as wpNP;
require_once 'system/Helper/wpNeoPixel.psys';
wpNeoPixel::$ip = std::posts('ip');
class wpNeoPixel {
	public static $ip;
	const c_NeoPixelDemo = 'NeoPixelDemo';
	public static function NeoPixelDemo() {
		try {
			$cmd = 'demo=1';
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelDemo?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_NeoPixelColor = 'NeoPixelColor';
	public static function NeoPixelColor() {
		try {
			$cmd = 'r=' . std::posts('r') . '&g=' . std::posts('g') . '&b=' . std::posts('b');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelColor?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
		wpNP::saveColor(std::posts('r'), std::posts('g'), std::posts('b'));
	}
	const c_NeoPixelEffect = 'NeoPixelEffect';
	public static function NeoPixelEffect() {
		try {
			$cmd = 'effect=' . std::posts('id');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelEffect?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_NeoPixelSleep = 'NeoPixelSleep';
	public static function NeoPixelSleep() {
		try {
			$cmd = 'sleep=' . std::posts('sleep');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelSleep?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_NeoPixelBrightness = 'NeoPixelBrightness';
	public static function NeoPixelBrightness() {
		try {
			$cmd = 'brightness=' . std::posts('brightness');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelBrightness?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_NeoPixelCW = 'NeoPixelCW';
	public static function NeoPixelCW() {
		try {
			$cmd = 'cw=' . std::posts('cw');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelCW?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_NeoPixelWW = 'NeoPixelWW';
	public static function NeoPixelWW() {
		try {
			$cmd = 'ww=' . std::posts('ww');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelWW?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_setNeoPixelOff = 'setNeoPixelOff';
	public static function setNeoPixelOff() {
		try {
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelOff', 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_setNeoPixelOn = 'setNeoPixelOn';
	public static function setNeoPixelOn() {
		try {
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixelOn', 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
	}
	const c_NeoPixel = 'NeoPixel';
	public static function NeoPixel() {
		try {
			$cmd = 'pixel=' . std::posts('pixel') . '&r=' . std::posts('r') . '&g=' . std::posts('g') . '&b=' . std::posts('b');
			file_get_contents('http://' . wpNeoPixel::$ip . '/setNeoPixel?' . $cmd, 0, self::getContext());
		} catch(Exception $e) {
			// Fail silently
		}
		wpNP::saveColor(std::posts('r'), std::posts('g'), std::posts('b'));
	}
	const c_getNeoPixel = 'getNeoPixel';
	public static function getNeoPixel() {
		header(wpJSON_HEADER);
		echo file_get_contents('http://' . wpNeoPixel::$ip . '/getNeoPixel');
	}
	const c_getSavedColor = 'getSavedColor';
	public static function getSavedColor() {
		$database = new wpDatabase();
		$database->query("SELECT TOP(13) [np].[name], [np].[r], [np].[g], [np].[b], [np].[brightness] FROM [neopixel] [np]
			LEFT JOIN [user] [u] ON [u].[id_user] = [np].[id_user]
			WHERE [u].[id_user] = '" . security::getIdFromUser() . "'
			ORDER BY [np].[saved] DESC");
		while($erg = $database->fetch()) {
?>
					<div class="colorBorderContainer">
						<div class="colorBorderFav"
							data-r="<?=$erg['r']?>"
							data-g="<?=$erg['g']?>"
							data-b="<?=$erg['b']?>"
							title="<?=$erg['name']?>"
							style="background-color: rgb(<?=$erg['r'] ?>, <?=$erg['g'] ?>, <?=$erg['b'] ?>);"></div>
					</div>
<?
		}
	}
	private static function getContext() {
		return stream_context_create([
			"http" => [
				"method"=>"GET",
				"timeout" => 1
			]
		]);
	}
}

switch(std::gets('param1')) {
		//###################################################################################
	case wpNeoPixel::c_NeoPixelDemo:
		wpNeoPixel::NeoPixelDemo();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixelColor:
		wpNeoPixel::NeoPixelColor();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixelSleep:
		wpNeoPixel::NeoPixelSleep();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixelBrightness:
		wpNeoPixel::NeoPixelBrightness();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixelWW:
		wpNeoPixel::NeoPixelWW();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixelCW:
		wpNeoPixel::NeoPixelCW();
		break;
		//###################################################################################
	case wpNeoPixel::c_setNeoPixelOff:
		wpNeoPixel::setNeoPixelOff();
		break;
		//###################################################################################
	case wpNeoPixel::c_setNeoPixelOn:
		wpNeoPixel::setNeoPixelOn();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixel:
		wpNeoPixel::NeoPixel();
		break;
		//###################################################################################
	case wpNeoPixel::c_getSavedColor:
		wpNeoPixel::getSavedColor();
		break;
		//###################################################################################
	case wpNeoPixel::c_NeoPixelEffect:
		wpNeoPixel::NeoPixelEffect();
		break;
		//###################################################################################
	case wpNeoPixel::c_getNeoPixel:
		wpNeoPixel::getNeoPixel();
		break;
}

